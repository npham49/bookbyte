// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Book {
  id                         String     @id @default(cuid())
  name                       String
  author                     String
  category                   String[]
  fileKey                    String
  chapterSeparator           String     @default("Chapter")
  publication                Int
  publicDomain               Boolean
  copyrightReferencesRemoved Boolean
  createdAt                  DateTime   @default(now())
  updatedAt                  DateTime   @updatedAt
  status                     BookStatus @default(UPLOADED)
  chapters                   Chapter[]
}

model Chapter {
  id        String   @id @default(cuid())
  bookId    String
  number    Int      @default(1)
  book      Book     @relation(fields: [bookId], references: [id])
  fileKey   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  summary   Summary?
}

model Summary {
  id        String   @id @default(cuid())
  chapterId String   @unique
  chapter   Chapter  @relation(fields: [chapterId], references: [id])
  title     String
  shortForm Json[]
  longForm  Json[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum BookStatus {
  UPLOADED
  SPLITTING
  SPLIT
  SUMMARIZING
  READY
  ERROR
}
